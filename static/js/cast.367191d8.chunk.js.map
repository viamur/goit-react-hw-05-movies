{"version":3,"file":"static/js/cast.367191d8.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","utils/api.js","utils/status.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__GlWio\",\"item\":\"Cast_item__a0CDL\",\"info\":\"Cast_info__UHntJ\"};","import { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport status from '../../utils/status';\nimport api from 'utils/api';\nimport s from './Cast.module.css';\n\nconst Cast = () => {\n  const [data, setData] = useState([]);\n  const [statusPage, setStatusPage] = useState(status.START);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetch = async () => {\n      setStatusPage(status.LOADING);\n      try {\n        const response = await api.cast(movieId);\n        setData(response);\n        setStatusPage(status.FINISH);\n      } catch (error) {\n        console.log(error);\n        setStatusPage(status.EROR);\n      }\n    };\n    fetch();\n    // eslint-disable-next-line\n  }, []);\n\n  if (statusPage === status.FINISH) {\n    return (\n      <ul className={s.list}>\n        {data.map(el => (\n          <li key={el.id} className={s.item}>\n            {el['profile_path'] ? (\n              <img\n                src={`https://image.tmdb.org/t/p/w500/${el['profile_path']}`}\n                alt={el.name}\n                width=\"200px\"\n                height=\"300px\"\n              />\n            ) : (\n              <img\n                src=\"https://dummyimage.com/200x300/faebd7/000000.jpg&text=photo+not+found\"\n                alt=\"notPhoto\"\n                width=\"200px\"\n                height=\"300px\"\n              />\n            )}\n            <div className={s.info}>\n              <p>\n                <b>Name: </b> {el.name}\n              </p>\n              <p>\n                <b>Character: </b> {el.character}\n              </p>\n            </div>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  if (statusPage === status.LOADING) {\n    return <p>Loading...</p>;\n  }\n\n  if (statusPage === status.LOADING) {\n    return <p>Eror...</p>;\n  }\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nclass apiFetch {\n  #BASE_URL = 'https://api.themoviedb.org/3/';\n  #API_KEY = '0a4aab5daca4d3b8b09b771948ad9265';\n  #SEARCH = 'search/movie';\n  #TRAND = 'trending/movie/day';\n  #ALL = 'movie/';\n\n  /* Запрос на ТРЕНДЫ */\n  trend = async page => {\n    const respons = await axios.get(\n      `${this.#BASE_URL}${this.#TRAND}?api_key=${this.#API_KEY}&page=${page}`\n    );\n    return respons.data.results;\n  };\n\n  /* Запрос ПОИСК ИНПУТ */\n  search = async (query, page) => {\n    const respons = await axios.get(\n      `${this.#BASE_URL}${this.#SEARCH}?api_key=${this.#API_KEY}&query=${query}&page=${page}`\n    );\n    return respons.data;\n  };\n\n  /* Запрос id */\n  id = async id => {\n    const respons = await axios.get(`${this.#BASE_URL}${this.#ALL}/${id}?api_key=${this.#API_KEY}`);\n    return respons.data;\n  };\n\n  /* Запрос Cast */\n  cast = async id => {\n    const respons = await axios.get(\n      `${this.#BASE_URL}${this.#ALL}/${id}/credits?api_key=${this.#API_KEY}`\n    );\n    return respons.data.cast;\n  };\n\n  /* Запрос Reviews */\n  reviews = async id => {\n    const respons = await axios.get(\n      `${this.#BASE_URL}${this.#ALL}/${id}/reviews?api_key=${this.#API_KEY}`\n    );\n    return respons.data.results;\n  };\n}\n\nconst api = new apiFetch();\nexport default api;\n","const status = {\n  LOADING: 'loading',\n  START: 'start',\n  FINISH: 'finish',\n  EROR: 'eror',\n};\nexport default status;\n"],"names":["useState","data","setData","status","statusPage","setStatusPage","movieId","useParams","useEffect","fetch","api","response","console","log","className","s","map","el","src","alt","name","width","height","character","id","apiFetch","trend","page","axios","respons","results","search","query","cast","reviews","LOADING","START","FINISH","EROR"],"sourceRoot":""}