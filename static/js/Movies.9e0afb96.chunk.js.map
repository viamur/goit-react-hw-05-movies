{"version":3,"file":"static/js/Movies.9e0afb96.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/List/List.module.css?2bcc","components/List/List.jsx","webpack://react-homework-template/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","webpack://react-homework-template/./src/components/FormSerch/FormSearch.module.css?fd82","components/FormSerch/FormSearch.jsx","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx","utils/api.js","utils/status.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"List_list__AK7hC\",\"item\":\"List_item__WqTbr\",\"link\":\"List_link__EYABn\"};","import { Link, useLocation } from 'react-router-dom';\nimport s from './List.module.css';\n\nconst List = ({ data, isHome }) => {\n  const location = useLocation();\n  const url = isHome ? 'movies/' : '';\n\n  return (\n    <ul className={s.list}>\n      {data.map(el => (\n        <li key={el.id} className={s.item}>\n          <Link to={`${url}${el.id}`} state={{ from: location }} className={s.link}>\n            {el.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default List;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\"};","import s from './Section.module.css';\n\nconst Section = ({ children }) => {\n  return <section className={s.section}>{children}</section>;\n};\nexport default Section;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"FormSearch_form__tI3YE\",\"input\":\"FormSearch_input__FkLUC\",\"btn\":\"FormSearch_btn__1D0oe\"};","import { useState } from 'react';\nimport api from '../../utils/api';\nimport s from './FormSearch.module.css';\n\nconst status = {\n  LOADING: 'loading',\n  START: 'start',\n  FINISH: 'finish',\n  EROR: 'eror',\n};\n\nconst FormSearch = ({ setStatusPage, setData, setSearchParams }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChangeInput = e => {\n    setQuery(e.target.value.trimStart());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query === '') return;\n    setSearchParams({ query });\n\n    const fetch = async () => {\n      setStatusPage(status.LOADING);\n      try {\n        const response = await api.search(query, 1);\n        setData(response.results);\n        setStatusPage(status.FINISH);\n      } catch (error) {\n        console.log(error);\n        setStatusPage(status.EROR);\n      }\n    };\n    fetch();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <input\n        type=\"text\"\n        name=\"query\"\n        value={query}\n        onChange={handleChangeInput}\n        className={s.input}\n      />\n      <button type=\"submit\" className={s.btn}></button>\n    </form>\n  );\n};\n\nexport default FormSearch;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Movies_title__MDLXB\"};","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Section from '../../components/Section/Section';\nimport status from '../../utils/status';\nimport api from 'utils/api';\nimport FormSearch from '../../components/FormSerch/FormSearch';\nimport List from '../../components/List/List';\nimport s from './Movies.module.css';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [data, setData] = useState([]);\n  const [page, setPage] = useState(1);\n  const [statusPage, setStatusPage] = useState(status.START);\n\n  const queryURL = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (queryURL === '') return;\n    setPage(1);\n    const fetch = async () => {\n      setStatusPage(status.LOADING);\n      try {\n        const response = await api.search(queryURL, page);\n        setData(response.results);\n        setStatusPage(status.FINISH);\n      } catch (error) {\n        console.log(error);\n        setStatusPage(status.EROR);\n      }\n    };\n    fetch();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <Section>\n      <FormSearch\n        setStatusPage={setStatusPage}\n        setData={setData}\n        setSearchParams={setSearchParams}\n      />\n      {statusPage === status.FINISH && data.length !== 0 && (\n        <p className={s.title}>Search result: {queryURL}</p>\n      )}\n      {statusPage === status.FINISH && data.length === 0 && (\n        <p className={s.title}>Your request was not found: {queryURL}</p>\n      )}\n      {statusPage === status.FINISH && data.length !== 0 && <List data={data} isHome={false} />}\n      {statusPage === status.LOADING && <p className={s.title}>Загрузка</p>}{' '}\n      {/* Скелетон надо сделать */}\n      {statusPage === status.EROR && <p className={s.title}>Erorr</p>}\n      {/* (data.length === 0) & (queryURL !== '')  */}\n    </Section>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nclass apiFetch {\n  #BASE_URL = 'https://api.themoviedb.org/3/';\n  #API_KEY = '0a4aab5daca4d3b8b09b771948ad9265';\n  #SEARCH = 'search/movie';\n  #TRAND = 'trending/movie/day';\n  #ALL = 'movie/';\n\n  /* Запрос на ТРЕНДЫ */\n  trend = async page => {\n    const respons = await axios.get(\n      `${this.#BASE_URL}${this.#TRAND}?api_key=${this.#API_KEY}&page=${page}`\n    );\n    return respons.data.results;\n  };\n\n  /* Запрос ПОИСК ИНПУТ */\n  search = async (query, page) => {\n    const respons = await axios.get(\n      `${this.#BASE_URL}${this.#SEARCH}?api_key=${this.#API_KEY}&query=${query}&page=${page}`\n    );\n    return respons.data;\n  };\n\n  /* Запрос id */\n  id = async id => {\n    const respons = await axios.get(`${this.#BASE_URL}${this.#ALL}/${id}?api_key=${this.#API_KEY}`);\n    return respons.data;\n  };\n\n  /* Запрос Cast */\n  cast = async id => {\n    const respons = await axios.get(\n      `${this.#BASE_URL}${this.#ALL}/${id}/credits?api_key=${this.#API_KEY}`\n    );\n    return respons.data.cast;\n  };\n\n  /* Запрос Reviews */\n  reviews = async id => {\n    const respons = await axios.get(\n      `${this.#BASE_URL}${this.#ALL}/${id}/reviews?api_key=${this.#API_KEY}`\n    );\n    return respons.data.results;\n  };\n}\n\nconst api = new apiFetch();\nexport default api;\n","const status = {\n  LOADING: 'loading',\n  START: 'start',\n  FINISH: 'finish',\n  EROR: 'eror',\n};\nexport default status;\n"],"names":["data","isHome","location","useLocation","url","className","s","map","el","to","id","state","from","title","children","status","setStatusPage","setData","setSearchParams","useState","query","setQuery","onSubmit","e","preventDefault","fetch","api","response","results","console","log","type","name","value","onChange","target","trimStart","useSearchParams","searchParams","page","setPage","statusPage","queryURL","get","useEffect","Section","length","List","apiFetch","trend","axios","respons","search","cast","reviews","LOADING","START","FINISH","EROR"],"sourceRoot":""}