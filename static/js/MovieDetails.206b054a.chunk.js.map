{"version":3,"file":"static/js/MovieDetails.206b054a.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","utils/api.js","utils/status.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\"};","import s from './Section.module.css';\n\nconst Section = ({ children }) => {\n  return <section className={s.section}>{children}</section>;\n};\nexport default Section;\n","// extracted by mini-css-extract-plugin\nexport default {\"btnBack\":\"MovieDetails_btnBack__X1hfE\",\"wrap\":\"MovieDetails_wrap__84S6L\",\"img\":\"MovieDetails_img__uOAom\",\"info\":\"MovieDetails_info__qv2SI\",\"title\":\"MovieDetails_title__cUGs9\",\"year\":\"MovieDetails_year__GW+nB\",\"score\":\"MovieDetails_score__p8Kk2\",\"subtitle\":\"MovieDetails_subtitle__NWwoQ\",\"list\":\"MovieDetails_list__dbNMP\",\"item\":\"MovieDetails_item__mbUY+\",\"subtitleAdd\":\"MovieDetails_subtitleAdd__WyBYZ\"};","import { useEffect, useState } from 'react';\nimport { Link, NavLink, Outlet, useLocation, useParams } from 'react-router-dom';\nimport Section from '../../components/Section/Section';\nimport status from '../../utils/status';\nimport api from '../../utils/api';\nimport s from './MovieDetails.module.css';\nimport { useRef } from 'react';\n\nconst MovieDetails = () => {\n  const [data, setData] = useState({});\n  const [statusPage, setStatusPage] = useState(status.START);\n\n  const { movieId } = useParams();\n  const locRef = useRef(null);\n  const location = useLocation();\n  console.log(location);\n\n  useEffect(() => {\n    locRef.current = location.state?.from ?? '/';\n    const dataConversion = obj => {\n      const genres = obj.genres.map(genre => genre.name).join(', ');\n      const year = obj['release_date'].split('-')[0];\n      const score = Math.ceil(obj['vote_average'] * 10);\n      const newData = {\n        img: `https://image.tmdb.org/t/p/w500/${obj['poster_path']}`,\n        title: obj.title,\n        genres,\n        year,\n        score,\n        overview: obj.overview,\n      };\n      setData(newData);\n      setStatusPage(status.FINISH);\n    };\n\n    const fetch = async () => {\n      setStatusPage(status.LOADING);\n      try {\n        const response = await api.id(movieId);\n        dataConversion(response);\n      } catch (error) {\n        console.log(error);\n        setStatusPage(status.EROR);\n      }\n    };\n    fetch();\n\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <Section>\n      {statusPage === status.FINISH && (\n        <>\n          <Link to={locRef.current} className={s.btnBack}>\n            {`<--Go to back`}\n          </Link>\n          <div className={s.wrap}>\n            <img src={data.img} alt={data.title} height=\"300\" width=\"200\" className={s.img} />\n            <div className={s.info}>\n              <h2 className={s.title}>\n                {data.title}\n                <span className={s.year}>({data.year})</span>\n              </h2>\n              <p className={s.score}>\n                User Score: <b>{data.score}%</b>{' '}\n              </p>\n              <h3 className={s.subtitle}>Overview</h3>\n              <p>{data.overview}</p>\n              <h3 className={s.subtitle}>Genres</h3>\n              <p>{data.genres}</p>\n            </div>\n          </div>\n          <div>\n            <h3 className={s.subtitleAdd}>Additional information</h3>\n            <ul className={s.list}>\n              <li className={s.item}>\n                <NavLink to={'cast'} className=\"linkAddIfo\">\n                  Cast\n                </NavLink>\n              </li>\n              <li className={s.item}>\n                <NavLink to={'reviews'} className=\"linkAddIfo\">\n                  Reviews\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n          <Outlet />\n        </>\n      )}\n      {statusPage === status.LOADING && <p>Loading...</p>}\n      {statusPage === status.EROR && <p>Eror</p>}\n    </Section>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nclass apiFetch {\n  #BASE_URL = 'https://api.themoviedb.org/3/';\n  #API_KEY = '0a4aab5daca4d3b8b09b771948ad9265';\n  #SEARCH = 'search/movie';\n  #TRAND = 'trending/movie/day';\n  #ALL = 'movie/';\n\n  /* Запрос на ТРЕНДЫ */\n  trend = async page => {\n    const respons = await axios.get(\n      `${this.#BASE_URL}${this.#TRAND}?api_key=${this.#API_KEY}&page=${page}`\n    );\n    return respons.data.results;\n  };\n\n  /* Запрос ПОИСК ИНПУТ */\n  search = async (query, page) => {\n    const respons = await axios.get(\n      `${this.#BASE_URL}${this.#SEARCH}?api_key=${this.#API_KEY}&query=${query}&page=${page}`\n    );\n    return respons.data;\n  };\n\n  /* Запрос id */\n  id = async id => {\n    const respons = await axios.get(`${this.#BASE_URL}${this.#ALL}/${id}?api_key=${this.#API_KEY}`);\n    return respons.data;\n  };\n\n  /* Запрос Cast */\n  cast = async id => {\n    const respons = await axios.get(\n      `${this.#BASE_URL}${this.#ALL}/${id}/credits?api_key=${this.#API_KEY}`\n    );\n    return respons.data.cast;\n  };\n\n  /* Запрос Reviews */\n  reviews = async id => {\n    const respons = await axios.get(\n      `${this.#BASE_URL}${this.#ALL}/${id}/reviews?api_key=${this.#API_KEY}`\n    );\n    return respons.data.results;\n  };\n}\n\nconst api = new apiFetch();\nexport default api;\n","const status = {\n  LOADING: 'loading',\n  START: 'start',\n  FINISH: 'finish',\n  EROR: 'eror',\n};\nexport default status;\n"],"names":["children","className","s","useState","data","setData","status","statusPage","setStatusPage","movieId","useParams","locRef","useRef","location","useLocation","console","log","useEffect","current","state","from","dataConversion","obj","genres","map","genre","name","join","year","split","score","Math","ceil","newData","img","title","overview","fetch","api","response","Section","to","src","alt","height","width","apiFetch","trend","page","axios","respons","results","search","query","id","cast","reviews","LOADING","START","FINISH","EROR"],"sourceRoot":""}